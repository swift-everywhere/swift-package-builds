name: Build Major Packages
on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'
  push:
    branches: [main]
    paths:
      - '.github/workflows/buildmajor.yml'

jobs:
  builds:
    strategy: 
      fail-fast: false
      matrix:
        swift: ['6.0', '6.1', 'nightly-6.2']
        # need macos-15 w/ NDK 27 rather than macos-latest (=macos-14) w/ NDK 26
        os: ['macos-15', 'ubuntu-24.04']
        #os: ['macos-latest', 'ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Android Toolchain
        id: setup-toolchain-android
        uses: skiptools/swift-android-action@main
        with:
          # just set up the toolchain and don't build anything
          build-package: false
          swift-version: ${{ matrix.swift }}

      - name: Update Android NDK
        if: false
        #if: ${{ matrix.swift == 'nightly-6.2' && matrix.os == 'macos-15' }}
        run: |
          # update the Android SDK's NDK version to 28
          # Updating NDK from /Users/runner/Library/Android/sdk/ndk/27.2.12479018 to /Users/runner/Library/Android/sdk/ndk/28.1.13356709
          echo "Updating NDK from ${ANDROID_NDK_HOME} to ${ANDROID_NDK_LATEST_HOME}"
          ANDROID_NDK_HOME=${ANDROID_NDK_LATEST_HOME} ~/Library/org.swift.swiftpm/swift-sdks/swift-6.2*/swift-android/scripts/setup-android-sdk.sh

      - name: Checkout swift-algorithms
        uses: actions/checkout@v4
        with:
          repository: apple/swift-algorithms
          path: swift-algorithms
      - name: Build swift-algorithms
        shell: bash
        working-directory: swift-algorithms
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout grdb-sqlcipher
        uses: actions/checkout@v4
        with:
          repository: swift-everywhere/grdb-sqlcipher
          path: grdb-sqlcipher
      - name: Build grdb-sqlcipher
        if: ${{ matrix.swift != '6.0' }}
        shell: bash
        working-directory: grdb-sqlcipher
        run: |
          GRDBCIPHER=1 ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-log
        uses: actions/checkout@v4
        with:
          repository: apple/swift-log
          path: swift-log
      - name: Build swift-log
        shell: bash
        working-directory: swift-log
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-markdown
        uses: actions/checkout@v4
        with:
          repository: apple/swift-markdown
          path: swift-markdown
      - name: Build swift-markdown
        shell: bash
        working-directory: swift-markdown
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-testing
        uses: actions/checkout@v4
        with:
          repository: apple/swift-testing
          path: swift-testing
      - name: Build swift-testing
        if: false # TODO: identify problems
        shell: bash
        working-directory: swift-testing
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-certificates
        uses: actions/checkout@v4
        with:
          repository: apple/swift-certificates
          path: swift-certificates
      - name: Build swift-certificates
        shell: bash
        working-directory: swift-certificates
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-toolchain-sqlite
        uses: actions/checkout@v4
        with:
          repository: swiftlang/swift-toolchain-sqlite
          path: swift-toolchain-sqlite
      - name: Build swift-toolchain-sqlite
        shell: bash
        working-directory: swift-toolchain-sqlite
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-java
        uses: actions/checkout@v4
        with:
          repository: swiftlang/swift-java
          path: swift-java
      - name: Build swift-java
        if: false # TODO: diagnose
        # no Testing in Swift Android SDK for 6.0
        #if: ${{ matrix.swift != '6.0' }}
        shell: bash
        working-directory: swift-java
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-numerics
        uses: actions/checkout@v4
        with:
          repository: apple/swift-numerics
          path: swift-numerics
      - name: Build swift-numerics
        shell: bash
        working-directory: swift-numerics
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-system
        uses: actions/checkout@v4
        with:
          repository: apple/swift-system
          path: swift-system
      - name: Build swift-system
        shell: bash
        working-directory: swift-system
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} # --build-tests # tests need https://github.com/apple/swift-system/pull/225

      - name: Checkout swift-collections
        uses: actions/checkout@v4
        with:
          repository: apple/swift-collections
          path: swift-collections
      - name: Build swift-collections
        shell: bash
        working-directory: swift-collections
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-atomics
        uses: actions/checkout@v4
        with:
          repository: apple/swift-atomics
          path: swift-atomics
      - name: Build swift-atomics
        shell: bash
        working-directory: swift-atomics
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-syntax
        uses: actions/checkout@v4
        with:
          repository: apple/swift-syntax
          path: swift-syntax
      - name: Build swift-syntax
        shell: bash
        working-directory: swift-syntax
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-format
        uses: actions/checkout@v4
        with:
          repository: apple/swift-format
          path: swift-format
      - name: Build swift-format
        shell: bash
        working-directory: swift-format
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-protobuf
        uses: actions/checkout@v4
        with:
          repository: apple/swift-protobuf
          path: swift-protobuf
      - name: Build swift-protobuf
        shell: bash
        working-directory: swift-protobuf
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-foundation
        uses: actions/checkout@v4
        with:
          repository: apple/swift-foundation
          path: swift-foundation
      - name: Build swift-foundation
        shell: bash
        working-directory: swift-foundation
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }}
          # tests not working yet
          # --build-tests

      - name: Checkout swift-build
        uses: actions/checkout@v4
        with:
          repository: swiftlang/swift-build
          path: swift-build
      - name: Build swift-build
        # needs https://github.com/swiftlang/swift-llbuild/pull/985
        if: false
        shell: bash
        working-directory: swift-build
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-llbuild
        uses: actions/checkout@v4
        with:
          repository: swiftlang/swift-llbuild
          path: swift-llbuild
      - name: Build swift-llbuild
        # broken in https://github.com/swiftlang/swift-llbuild/commit/9087bdf8c7d4c95402d6d811745ca5ff3e149741
        # needs https://github.com/swiftlang/swift-llbuild/pull/985
        if: false
        shell: bash
        working-directory: swift-llbuild
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-nio
        uses: actions/checkout@v4
        with:
          repository: apple/swift-nio
          path: swift-nio
      - name: Build swift-nio
        shell: bash
        working-directory: swift-nio
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-nio-extras
        uses: actions/checkout@v4
        with:
          repository: apple/swift-nio-extras
          path: swift-nio-extras
      - name: Build swift-nio-extras
        # re-disable nio-extras due to missing Android import
        # https://github.com/swift-everywhere/swift-package-builds/actions/runs/14359370483/job/40256564910
        # https://github.com/swift-everywhere/swift-package-builds/actions/runs/14912085983/job/41888722177#step:38:1176
        #if: ${{ matrix.swift != 'nightly-6.2' || matrix.os != 'macos-latest' }}
        if: ${{ matrix.swift == '6.0' }}
        shell: bash
        working-directory: swift-nio-extras
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-nio-http2
        uses: actions/checkout@v4
        with:
          repository: apple/swift-nio-http2
          path: swift-nio-http2
      - name: Build swift-nio-http2
        shell: bash
        working-directory: swift-nio-http2
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout swift-nio-ssl
        uses: actions/checkout@v4
        with:
          repository: apple/swift-nio-ssl
          path: swift-nio-ssl
      - name: Build swift-nio-ssl
        if: false # error: cannot find 'open' in scope
        shell: bash
        working-directory: swift-nio-ssl
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout jpsim/Yams
        uses: actions/checkout@v4
        with:
          repository: jpsim/Yams
          path: Yams
      - name: Build jpsim/Yams
        shell: bash
        working-directory: Yams
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout tayloraswift/swift-png
        uses: actions/checkout@v4
        with:
          repository: tayloraswift/swift-png
          path: swift-png
      - name: Build tayloraswift/swift-png
        # no Testing in Swift Android SDK for 6.0
        if: ${{ matrix.swift != '6.0' }}
        shell: bash
        working-directory: swift-png
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout Alamofire/Alamofire
        uses: actions/checkout@v4
        with:
          repository: Alamofire/Alamofire
          path: Alamofire
      - name: Build Alamofire/Alamofire
        shell: bash
        working-directory: Alamofire
        run: |
          # errors when building tests
          ${{ steps.setup-toolchain-android.outputs.swift-build }} # --build-tests

      - name: Checkout vapor/vapor
        uses: actions/checkout@v4
        with:
          repository: vapor/vapor
          path: vapor
      - name: Build vapor/vapor
        shell: bash
        working-directory: vapor
        run: |
          # tests disabled due to AsyncAuthTests.swift needing sleep import
          ${{ steps.setup-toolchain-android.outputs.swift-build }} # --build-tests

      - name: Checkout grpc/grpc-swift
        uses: actions/checkout@v4
        with:
          repository: grpc/grpc-swift
          path: grpc-swift
      - name: Build grpc/grpc-swift
        # no Testing in Swift Android SDK for 6.0
        if: ${{ matrix.swift != '6.0' }}
        shell: bash
        working-directory: grpc-swift
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Checkout pointfreeco/swift-sharing
        uses: actions/checkout@v4
        with:
          repository: pointfreeco/swift-sharing
          path: pointfreeco/swift-sharing
      - name: Build pointfreeco/swift-sharing
        # crash on macOS OSS Toolchain: https://github.com/swiftlang/swift/issues/80759
        # no Testing in Swift Android SDK for 6.0
        # Plus tests assume presence of SwiftUI/AppStorageKey
        if: ${{ matrix.os != 'macos-15' }}
        shell: bash
        working-directory: pointfreeco/swift-sharing
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} # --build-tests

      - name: Checkout swift-crypto
        uses: actions/checkout@v4
        with:
          repository: apple/swift-crypto
          path: swift-crypto
      - name: Build swift-crypto
        shell: bash
        working-directory: swift-crypto
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests

      - name: Test swift-crypto
        if: false
        uses: skiptools/swift-android-action@main
        with:
          package-path: swift-crypto
          run-tests: ${{ matrix.os != 'macos-15' }}
          copy-files: Tests
          swift-version: ${{ matrix.swift }}

      - name: Checkout swift-tools-support-core
        uses: actions/checkout@v4
        with:
          repository: swiftlang/swift-tools-support-core
          path: swift-tools-support-core
      - name: Build swift-tools-support-core
        shell: bash
        # different nullability on type for API 28+
        # https://github.com/finagolfin/swift-android-sdk/issues/219
        if: ${{ matrix.swift != 'nightly-6.2' }}
        working-directory: swift-tools-support-core
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }}
          #--build-tests # fails without --android-spawn

      - name: Checkout swift-package-manager
        uses: actions/checkout@v4
        with:
          repository: apple/swift-package-manager
          path: swift-package-manager
      - name: Build swift-package-manager
        if: false # needs fix for: Sources/PackagePlugin/Plugin.swift:598:61: error: value of optional type 'UnsafeMutablePointer<CChar>?' (aka 'Optional<UnsafeMutablePointer<Int8>>') must be unwrapped to a value of type 'UnsafeMutablePointer<CChar>' (aka 'UnsafeMutablePointer<Int8>')
        shell: bash
        working-directory: swift-package-manager
        run: |
          ${{ steps.setup-toolchain-android.outputs.swift-build }} --build-tests
